AC_INIT(src/ices.c)
AC_CONFIG_SUBDIRS(libshout)

ICES_MAJOR=0
ICES_MINOR=0
ICES_MICRO=1

dnl Check to see if ICES_SPECIAL is overridden on commandline
if test -z "$ICES_SPECIAL"; then
	ICES_SPECIAL=beta5
fi

ICES_VERSION_SMALL=$ICES_MAJOR.$ICES_MINOR.$ICES_MICRO

if test "x$ICES_SPECIAL" = "xNONE"; then
	ICES_VERSION=$ICES_VERSION_SMALL
else
	ICES_VERSION=$ICES_VERSION_SMALL.$ICES_SPECIAL
fi

ICES_PACKAGE=ices
VERSION="$ICES_VERSION"

echo "Building ices-$VERSION..."

AM_INIT_AUTOMAKE($ICES_PACKAGE, $VERSION)
AM_MAINTAINER_MODE
AM_CONDITIONAL(FSSTD, test x$enable_fsstd = xyes)
AC_SUBST(USE_FSSTD)

AM_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

dnl reasonable guesses for where stuff is installed
if test "$prefix" = "NONE"
then
  prefix="/usr/local/icecast"
fi

AC_ARG_ENABLE(fsstd, [  --enable-fsstd              install files following FSSTD [default=no]], , enable_fsstd=no)

if test "x$enable_fsstd" = "xyes"; then
	ICES_BINDIR=/usr/bin
	ICES_SBINDIR=/usr/sbin
	ICES_ETCDIR=/etc/icecast
	ICES_ETCDIR_INST=/etc/icecast
	ICES_MODULE_DIR=/usr/share/icecast/modules
	ICES_SHAREDIR=/usr/share/icecast
	ICES_LOGDIR=/var/log/icecast
	ICES_LOGDIR_INST=/var/log/icecast
	ICES_DOCDIR=/usr/doc/ices-${ICES_VERSION_SMALL}
	USE_FSSTD=yes
else
	ICES_BINDIR=${prefix}/bin
	ICES_SBINDIR=${prefix}/bin
	ICES_ETCDIR=conf
	ICES_ETCDIR_INST=${prefix}/conf
	ICES_MODULEDIR=${prefix}/modules
	ICES_SHAREDIR=${prefix}
	ICES_LOGDIR=logs
	ICES_LOGDIR_INST=${prefix}/logs
	ICES_TEMPLATEDIR=templates
	ICES_TEMPLATEDIR_INST=${prefix}/templates
	ICES_STATICDIR=static
	ICES_STATICDIR_INST=${prefix}/static
	ICES_DOCDIR=${prefix}/doc
	USE_FSSTD=no
fi

AM_CONFIG_HEADER(config.h)

AC_DEFINE_UNQUOTED(VERSION, "$VERSION")
AC_SUBST(VERSION)

AC_SUBST(ICES_BINDIR)
AC_SUBST(ICES_SBINDIR)
AC_SUBST(ICES_ETCDIR_INST)
AC_SUBST(ICES_LOGDIR_INST)
AC_SUBST(ICES_DOCDIR)

AC_DEFINE_UNQUOTED(ICES_ETCDIR, "$ICES_ETCDIR")
AC_SUBST(ICES_ETCDIR)
AC_DEFINE_UNQUOTED(ICES_LOGDIR, "$ICES_LOGDIR")
AC_SUBST(ICES_LOGDIR)
AC_DEFINE_UNQUOTED(ICES_MODULEDIR, "$ICES_MODULEDIR")
AC_SUBST(ICES_MODULEDIR)

AC_ARG_PROGRAM
AC_PROG_RANLIB

dnl Checks for programs.
AC_PROG_CC

if test "$GCC" = yes; then
	CFLAGS="$CFLAGS -Wall"
fi

AC_CHECK_PROG(UNAME,uname,uname)
AC_CHECK_PROG(GMAKE,gmake,gmake)
AC_PROG_INSTALL

dnl weird ass systems
AC_AIX
AC_ISC_POSIX
AC_MINIX

AC_MSG_CHECKING(your OS)
system=`$UNAME`
IRIX=no
case $system in
	Linux)
		AC_DEFINE(LINUX)
		AC_MSG_RESULT(Linux)
	;;
	SunOS)
		if test x`uname -r | cut -d . -f 1` = "x5"; then
			SYSV=1
			SVR4=1
			SOLARIS=1
			AC_MSG_RESULT(Solaris)
			AC_DEFINE(SYSV)
			AC_DEFINE(SVR4)
			AC_DEFINE(SOLARIS)
		else
			AC_MSG_RESULT(SunOS)
		fi
		if test "$CC" = cc; then
			CFLAGS="$CFLAGS -mt"
		fi
	;;
	HP-UX)
		hpux=1
		AC_DEFINE(hpux)
		AC_MSG_RESULT(HP-UX)
		CFLAGS="$CFLAGS -D_HPUX_SOURCE -DHPUX"
		if test "$CC" = cc; then
			CFLAGS="$CFLAGS -Aa"
		fi
	;;
	IRIX)
		IRIX=yes
		AC_DEFINE(IRIX)
		AC_MSG_RESULT(IRIX)
	;;
	*BSD*)
		__SOMEBSD__=yes
		AC_DEFINE(__SOMEBSD__)
		AC_MSG_RESULT(Some BSD variant)
		OLDCPPFLAGS=$CPPFLAGS
		THREADCPPFLAGS="-pthread"
		CPPFLAGS="$OLDCPPFLAGS $THREADCPPFLAGS"
		AC_TRY_COMPILE([#include <pthread.h>],
			       [pthread_t thread; ],	
	       		       ,
			       	CPPFLAGS="$OLDCPPFLAGS")
		CPPFLAGS=$OLDCPPFLAGS
	;;
	*)
		AC_MSG_RESULT($system)
	;;
esac

if test ${IRIX} = yes; then
	echo Skipping library tests because they confuse Irix.
else

	

  AC_CHECK_FUNCS(socket)

  if test "$ac_cv_func_socket" = no; then
    for lib in socket inet; do
	if test "$HAVE_SOCKET" != 1; then
		AC_CHECK_LIB($lib, socket,LIBS="$LIBS -l$lib";HAVE_SOCKET=1;AC_DEFINE(HAVE_SOCKET))
	fi
    done
  fi
  
  AC_CHECK_FUNCS(connect)	

  if test "$ac_cv_func_connect" = no; then
    for lib in nsl; do
	if test "$HAVE_CONNECT" != 1; then
		AC_CHECK_LIB($lib, connect,LIBS="$LIBS -l$lib";HAVE_CONNECT=1;AC_DEFINE(HAVE_CONNECT))
	fi
    done
  fi

  AC_CHECK_FUNCS(gethostbyname)
  if test "$ac_cv_func_gethostbyname" = no; then
	for lib in dns nsl resolv; do
	  if test "$HAVE_GETHOSTBYNAME" != 1; then
	    AC_CHECK_LIB($lib, gethostbyname, LIBS="$LIBS -l$lib";HAVE_GETHOSTBYNAME=1;AC_DEFINE(HAVE_GETHOSTBYNAME))
	  fi
	done	
  fi	

  AC_CHECK_FUNCS(nanosleep)

  if test "$ac_cv_func_nanosleep" = no; then
        for lib in rt; do
                AC_CHECK_LIB($lib, nanosleep,LIBS="$LIBS -l$lib";HAVE_NANOSLEEP=1;AC_DEFINE(HAVE_NANOSLEEP))
        done
  fi


fi

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_DIRENT

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_SIGNAL
AC_HEADER_TIME
AC_STRUCT_TM
AC_RETSIGTYPE

AC_MSG_CHECKING([for unix98 socklen_t])
AC_TRY_COMPILE([#include <sys/types.h>
		#include <sys/socket.h>],
	    [typedef socklen_t int; 
	    int apan (void) {return 1;}],
	AC_MSG_RESULT(yeah)
	HAVE_SOCKLEN_T=yes,
	AC_MSG_RESULT(nah)
	HAVE_SOCKLEN_T=no)

if test ${HAVE_SOCKLEN_T} = yes ;then 
	AC_DEFINE(HAVE_SOCKLEN_T)		
fi

dnl Checks for library functions.
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF

THREADLIBS="no"

AC_MSG_CHECKING(for pthread functions in standard libraries)
AC_TRY_LINK(, [pthread_create();],AC_MSG_RESULT(yes);THREADLIBS="",AC_MSG_RESULT(no))

if test "$THREADLIBS" = ""; then
	AC_MSG_CHECKING(if that definition really works)
	AC_TRY_RUN([int main() { return !pthread_equal(pthread_self(), pthread_self());}],
		    AC_MSG_RESULT(yes);THREADLIBS="",
		    AC_MSG_RESULT(no);THREADLIBS="no",
		    AC_MSG_RESULT(crosscompiling so no);THREADLIBS="no")
fi

if test "$THREADLIBS" = "no"; then
    for lib in pthread c_r dce pthreads; do
      AC_CHECK_LIB($lib,pthread_create,THREADLIBS="-l$lib")
      if test $THREADLIBS != "no"; then
	break
      fi
    done
fi
  
if test "$THREADLIBS" = "no"; then
	  AC_CHECK_FUNCS(pthread_create,THREADLIBS="")
fi

if test "$THREADLIBS" = "no"; then
        AC_MSG_ERROR(Your system doesn't seem to support posix threads. Ices needs posix threads to compile.) 
        exit
fi

LIBS="$LIBS $THREADLIBS"
CPPFLAGS="$CPPFLAGS $THREADCPPFLAGS"

AC_ARG_WITH(lame,
[  --with-lame[=DIR]           enable support for reencoding with lame [in DIR]])

AC_ARG_WITH(lame-includes,
[  --with-lame-includes=DIR    directory to find lame.h])

AC_ARG_WITH(lame-libraries,
[  --with-lame-libraries=DIR   directory to find lame library])

if test "$with_lame_includes"
then
  if test -f "$with_lame_includes/lame.h"
  then
    CPPFLAGS="$CPPFLAGS -I$with_lame_includes"
  else
    AC_MSG_ERROR("lame.h is not where you told me it should be. No that is just plain rude.")
  fi
fi

if test "$with_lame_libraries"
then
  LIBS="$LIBS -L$with_lame_libraries"
fi

if test "$with_lame" != "no"
then
  AC_CACHE_SAVE
  if test "$with_lame" != "yes"
  then
    CPPFLAGS="$CPPFLAGS -I$with_lame"
    LDFLAGS="$LDFLAGS -L$with_lame"
  fi
  have_LAME="no"
  AC_CHECK_HEADER(lame/lame.h, [
    have_LAME="maybe",
    AC_DEFINE(HAVE_LAME_LAME_H, 1, [ Use <lame/lame.h> instead of <lame.h> ])
    ],
    AC_CHECK_HEADER(lame.h, [
      have_LAME="maybe"]))
  if test "$have_LAME" != "no"
  then
    AC_CHECK_LIB(mp3lame, lame_init, [
      have_LAME="yes"
      LIBS="$LIBS -lmp3lame"
      AC_DEFINE(HAVE_LIBLAME)
      ],, -lm)
  fi
  if test "$have_LAME" != "yes"
  then
    AC_MSG_ERROR([Could not find a valid LAME library installation])
  fi
fi

AC_ARG_WITH(perl,
[  --with-perl                 enable perl interpreter])

AC_ARG_WITH(perl-includes,
[  --with-perl-includes=DIR    perl include files are in DIR (look for perl.h)])

AC_ARG_WITH(perl-libraries,
[  --with-perl-libraries=DIR   perl libraries are in DIR (look for libperl.a)])

if test "$with_perl_includes"; then
	CPPFLAGS="$CPPFLAGS -I$with_perl_includes"
elif test "$with_perl"; then
	COREDIR=`perl -MConfig -e 'print $Config{archlib}'`/CORE
	EMBEDFLAGS=`perl -MExtUtils::Embed -e ccopts`  
	CPPFLAGS="${CPPFLAGS} -I${COREDIR} ${EMBEDFLAGS} ${EXTRAFLAGS}"
fi

if test "$with_perl_libraries"; then
	LIBS="$LIBS -L$with_perl_libraries"
elif test "$with_perl"; then
	COREDIR=`perl -MConfig -e 'print $Config{archlib}'`/CORE
	EMBEDFLAGS=`perl -MExtUtils::Embed -e ldopts`  
	LIBS="$LIBS -L$COREDIR $EXTRALIBS $EMBEDFLAGS"
fi

if test "$with_perl"; then
dnl I can't say for sure what libs we need for perl, let's hope this works
AC_CHECK_LIB(dl, dlopen)
AC_CHECK_FUNCS(perl_construct)
        if test "$ac_cv_func_perl_construct" != no; then
			HAVE_LIBPERL=1
			AC_DEFINE(HAVE_LIBPERL)
	else
		echo "You requested perl support, but there was a problem with your perl libraries."
        fi
fi


AC_ARG_WITH(python,
[  --with-python[=DIR]         enable python interpreter [in DIR]])

use_python=$withval

AC_ARG_WITH(python-includes,
[  --with-python-includes=DIR  python include files are in DIR])
AC_ARG_WITH(python-libraries,
[  --with-python-libraries=DIR python libraries are in DIR])

if test "$with_python_includes"
then
  CPPFLAGS="$CPPFLAGS -I$with_python_includes"
fi

if test "$with_python_libraries"
then
  LIBS="$LIBS -L$with_python_libraries"
fi

if test "$with_python" != "no"
then
  if test "$with_python" != "yes"
  then
    CPPFLAGS="$CPPFLAGS -I$with_python"
    LDFLAGS="$LDFLAGS -L$with_python"
  fi

  dnl I can't say for sure what libs we need for python, but this is what my
  dnl system needs
  AC_CHECK_LIB(dl, dlopen)
  AC_CHECK_LIB(m, log)

  for lib in python python2.0 python1.6 python1.5
  do
    if test "$HAVE_LIBPYTHON" != 1
    then
      AC_CHECK_LIB($lib, Py_Initialize, [
        LIBS="$LIBS -l$lib"
        HAVE_LIBPYTHON=1
        AC_DEFINE(HAVE_LIBPYTHON)])
    fi
  done
fi

AC_CHECK_PROGS(XMLCONFIG, [xml2-config xml-config])

if test "$XMLCONFIG"; then
	HAVE_LIBXML=1
	AC_DEFINE(HAVE_LIBXML)
	LDFLAGS="$LDFLAGS `$XMLCONFIG --libs`"
	CPPFLAGS="$CPPFLAGS `$XMLCONFIG --cflags`"
else
	echo "xml-config program not found, compiling without libxml support. (This means no support for configfiles)"
fi

AC_CHECK_HEADERS(fcntl.h sys/types.h sys/socket.h sys/time.h sys/stat.h unistd.h assert.h sys/resource.h math.h signal.h sys/signal.h errno.h Python.h libxml/parser.h gnome-xml/parser.h parser.h)
AC_CHECK_FUNCS(gettimeofday strstr snprintf vsnprintf rename setpgid basename setsockopt umask inet_addr inet_aton inet_ntoa sigaction pthread_sigmask setlinebuf)

AC_OUTPUT([Makefile src/Makefile src/playlist_builtin/Makefile
	conf/Makefile conf/ices.conf.dist doc/Makefile resolver/Makefile
	thread/Makefile avl/Makefile log/Makefile src/interpreter/Makefile
	src/xml/Makefile])


echo "Compiling with CPPFLAGS=$CPPFLAGS"
echo "Linking with LDFLAGS=$LDFLAGS $LIBS"

if test "$GMAKE"; then
echo "Ok, everything seems ok. Now do 'gmake'."
echo "You can then run 'gmake install' to install as you specified"
else
echo "Ok, everything seems ok. Now do 'make'."
echo "You can then run 'make install' to install as you specified"
fi
